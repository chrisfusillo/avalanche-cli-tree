{
  "version": "v1.7.7",
  "tree": {
    "description": "Avalanche-CLI is a command-line tool that gives developers access to everything Avalanche. This release specializes in helping developers build and test Subnets. To get started, look at the documentation for the subcommands or jump right in with avalanche subnet create myNewSubnet. Usage: avalanche [command]",
    "flags": {
      "--config": {
        "type": "string",
        "description": "config file (default is $HOME/.avalanche-cli/config.json)"
      },
      "-h": {
        "alias": "--help"
      },
      "--help": {
        "type": "help",
        "description": "for avalanche"
      },
      "--log-level": {
        "type": "string",
        "description": "log level for the application (default \"ERROR\")"
      },
      "--skip-update-check": {
        "type": "skip",
        "description": "check for new versions"
      },
      "-v": {
        "alias": "--version"
      },
      "--version": {
        "type": "version",
        "description": "for avalanche Use \"avalanche [command] --help\" for more information about a command."
      }
    },
    "subcommands": {
      "blockchain": {
        "description": "The blockchain command suite provides a collection of tools for developing and deploying Blockchains. To get started, use the blockchain create command wizard to walk through the configuration of your very first Blockchain. Then, go ahead and deploy it with the blockchain deploy command. You can use the rest of the commands to manage your Blockchain configurations and live deployments. Usage: avalanche blockchain [flags] avalanche blockchain [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for blockchain Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche blockchain [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "addValidator": {
            "description": "The blockchain addValidator command whitelists a primary network validator to validate the subnet of the provided deployed Blockchain. To add the validator to the Subnet's allow list, you first need to provide the blockchainName and the validator's unique NodeID. The command then prompts for the validation start time, duration, and stake weight. You can bypass these prompts by providing the values with flags. This command currently only works on Blockchains deployed to either the Fuji Testnet or Mainnet. Usage: avalanche blockchain addValidator [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--default-duration": {
                "type": "set",
                "description": "duration so as to validate until primary validator ends its period"
              },
              "--default-start-time": {
                "type": "use",
                "description": "default start time for subnet validator (5 minutes later for fuji & mainnet, 30 seconds later for devnet)"
              },
              "--default-validator-params": {
                "type": "use",
                "description": "default weight/start/duration params for subnet validator"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-e": {
                "alias": "--ewoq"
              },
              "--ewoq": {
                "type": "use",
                "description": "ewoq key [fuji/devnet only]"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for addValidator"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji/devnet only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji/devnet)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--nodeID": {
                "type": "string",
                "description": "set the NodeID of the validator to add"
              },
              "--output-tx-path": {
                "type": "string",
                "description": "file path of the add validator tx"
              },
              "--staking-period": {
                "type": "duration",
                "description": "how long this validator will be staking"
              },
              "--start-time": {
                "type": "string",
                "description": "UTC start time when this validator starts validating, in 'YYYY-MM-DD HH:MM:SS' format"
              },
              "--subnet-auth-keys": {
                "type": "strings",
                "description": "control keys that will be used to authenticate add validator tx"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--wait-for-tx-acceptance": {
                "type": "just",
                "description": "issue the add validator tx, without waiting for its acceptance (default true)"
              },
              "--weight": {
                "type": "uint",
                "description": "set the staking weight of the validator to add Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "changeOwner": {
            "description": "The blockchain changeOwner changes the owner of the subnet of the deployed Blockchain. Usage: avalanche blockchain changeOwner [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--control-keys": {
                "type": "strings",
                "description": "addresses that may make subnet changes"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-e": {
                "alias": "--ewoq"
              },
              "--ewoq": {
                "type": "use",
                "description": "ewoq key [fuji/devnet]"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for changeOwner"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji/devnet]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji/devnet)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--output-tx-path": {
                "type": "string",
                "description": "file path of the transfer subnet ownership tx"
              },
              "-s": {
                "alias": "--same-control-key"
              },
              "--same-control-key": {
                "type": "use",
                "description": "the fee-paying key as control key"
              },
              "--subnet-auth-keys": {
                "type": "strings",
                "description": "control keys that will be used to authenticate transfer subnet ownership tx"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--threshold": {
                "type": "uint32",
                "description": "required number of control key signatures to make subnet changes Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "configure": {
            "description": "AvalancheGo nodes support several different configuration files. Subnets have their own Subnet config which applies to all chains/VMs in the Subnet. Each chain within the Subnet can have its own chain config. A chain can also have special requirements for the AvalancheGo node configuration itself. This command allows you to set all those files. Usage: avalanche blockchain configure [blockchainName] [flags]",
            "flags": {
              "--chain-config": {
                "type": "string",
                "description": "path to the chain configuration"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for configure"
              },
              "--node-config": {
                "type": "string",
                "description": "path to avalanchego node configuration"
              },
              "--per-node-chain-config": {
                "type": "string",
                "description": "path to per node chain configuration for local network"
              },
              "--subnet-config": {
                "type": "string",
                "description": "path to the subnet configuration Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "create": {
            "description": "The blockchain create command builds a new genesis file to configure your Blockchain. By default, the command runs an interactive wizard. It walks you through all the steps you need to create your first Blockchain. The tool supports deploying Subnet-EVM, and custom VMs. You can create a custom, user-generated genesis with a custom VM by providing the path to your genesis and VM binaries with the --genesis and --vm flags. By default, running the command with a blockchainName that already exists causes the command to fail. If you'd like to overwrite an existing configuration, pass the -f flag. Usage: avalanche blockchain create [blockchainName] [flags]",
            "flags": {
              "--custom": {
                "type": "use",
                "description": "a custom VM template"
              },
              "--custom-vm-branch": {
                "type": "string",
                "description": "custom vm branch or commit"
              },
              "--custom-vm-build-script": {
                "type": "string",
                "description": "custom vm build-script"
              },
              "--custom-vm-path": {
                "type": "string",
                "description": "file path of custom vm to use"
              },
              "--custom-vm-repo-url": {
                "type": "string",
                "description": "custom vm repository url"
              },
              "--debug": {
                "type": "enable",
                "description": "blockchain debugging"
              },
              "--evm": {
                "type": "use",
                "description": "the Subnet-EVM as the base template"
              },
              "--evm-chain-id": {
                "type": "uint",
                "description": "chain ID to use with Subnet-EVM"
              },
              "--evm-defaults": {
                "type": "deprecation",
                "description": "notice: use '--production-defaults'"
              },
              "--evm-token": {
                "type": "string",
                "description": "token symbol to use with Subnet-EVM"
              },
              "--external-gas-token": {
                "type": "use",
                "description": "a gas token from another blockchain"
              },
              "-f": {
                "alias": "--force"
              },
              "--force": {
                "type": "overwrite",
                "description": "the existing configuration if one exists"
              },
              "--from-github-repo": {
                "type": "generate",
                "description": "custom VM binary from github repository"
              },
              "--genesis": {
                "type": "string",
                "description": "file path of genesis to use"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for create"
              },
              "--latest": {
                "type": "use",
                "description": "latest Subnet-EVM released version, takes precedence over --vm-version"
              },
              "--pre-release": {
                "type": "use",
                "description": "latest Subnet-EVM pre-released version, takes precedence over --vm-version"
              },
              "--production-defaults": {
                "type": "use",
                "description": "default production settings for your blockchain"
              },
              "--teleporter": {
                "type": "interoperate",
                "description": "with other blockchains using teleporter"
              },
              "--test-defaults": {
                "type": "use",
                "description": "default test settings for your blockchain"
              },
              "--vm": {
                "type": "string",
                "description": "file path of custom vm to use. alias to custom-vm-path"
              },
              "--vm-version": {
                "type": "string",
                "description": "version of Subnet-EVM template to use"
              },
              "--warp": {
                "type": "generate",
                "description": "a vm with warp support (needed for teleporter) (default true) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "delete": {
            "description": "The blockchain delete command deletes an existing blockchain configuration. Usage: avalanche blockchain delete [blockchainName] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for delete Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "deploy": {
            "description": "The blockchain deploy command deploys your Blockchain configuration locally, to Fuji Testnet, or to Mainnet. At the end of the call, the command prints the RPC URL you can use to interact with the Subnet. Avalanche-CLI only supports deploying an individual Blockchain once per network. Subsequent attempts to deploy the same Blockchain to the same network (local, Fuji, Mainnet) aren't allowed. If you'd like to redeploy a Blockchain locally for testing, you must first call avalanche network clean to reset all deployed chain state. Subsequent local deploys redeploy the chain with fresh state. You can deploy the same Blockchain to multiple networks, so you can take your locally tested Subnet and deploy it on Fuji or Mainnet. Usage: avalanche blockchain deploy [blockchainName] [flags]",
            "flags": {
              "--avalanchego-path": {
                "type": "string",
                "description": "use this avalanchego binary path"
              },
              "--avalanchego-version": {
                "type": "string",
                "description": "use this version of avalanchego (ex: v1.17.12) (default \"latest\")"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--control-keys": {
                "type": "strings",
                "description": "addresses that may make subnet changes"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-e": {
                "alias": "--ewoq"
              },
              "--ewoq": {
                "type": "use",
                "description": "ewoq key [fuji/devnet deploy only]"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for deploy"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji/devnet deploy only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji/devnet)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--mainnet-chain-id": {
                "type": "uint32",
                "description": "use different ChainID for mainnet deployment"
              },
              "--output-tx-path": {
                "type": "string",
                "description": "file path of the blockchain creation tx"
              },
              "-s": {
                "alias": "--same-control-key"
              },
              "--same-control-key": {
                "type": "use",
                "description": "the fee-paying key as control key"
              },
              "--skip-local-teleporter": {
                "type": "skip",
                "description": "automatic teleporter deploy on local networks [to be deprecated]"
              },
              "--skip-relayer": {
                "type": "skip",
                "description": "relayer deploy"
              },
              "--skip-teleporter-deploy": {
                "type": "skip",
                "description": "automatic teleporter deploy"
              },
              "--subnet-auth-keys": {
                "type": "strings",
                "description": "control keys that will be used to authenticate chain creation"
              },
              "-u": {
                "alias": "--subnet-id"
              },
              "--subnet-id": {
                "type": "string",
                "description": "do not create a subnet, deploy the blockchain into the given subnet id"
              },
              "--subnet-only": {
                "type": "only",
                "description": "create a subnet"
              },
              "--teleporter-messenger-contract-address-path": {
                "type": "string",
                "description": "path to an interchain messenger contract address file"
              },
              "--teleporter-messenger-deployer-address-path": {
                "type": "string",
                "description": "path to an interchain messenger deployer address file"
              },
              "--teleporter-messenger-deployer-tx-path": {
                "type": "string",
                "description": "path to an interchain messenger deployer tx file"
              },
              "--teleporter-registry-bytecode-path": {
                "type": "string",
                "description": "path to an interchain messenger registry bytecode file"
              },
              "--teleporter-version": {
                "type": "string",
                "description": "teleporter version to deploy (default \"latest\")"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--threshold": {
                "type": "uint32",
                "description": "required number of control key signatures to make subnet changes Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "describe": {
            "description": "The blockchain describe command prints the details of a Blockchain configuration to the console. By default, the command prints a summary of the configuration. By providing the --genesis flag, the command instead prints out the raw genesis file. Usage: avalanche blockchain describe [blockchainName] [flags]",
            "flags": {
              "-g": {
                "alias": "--genesis"
              },
              "--genesis": {
                "type": "Print",
                "description": "the genesis to the console directly instead of the summary"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for describe Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "export": {
            "description": "The blockchain export command write the details of an existing Blockchain deploy to a file. The command prompts for an output path. You can also provide one with the --output flag. Usage: avalanche blockchain export [blockchainName] [flags]",
            "flags": {
              "--custom-vm-branch": {
                "type": "string",
                "description": "custom vm branch"
              },
              "--custom-vm-build-script": {
                "type": "string",
                "description": "custom vm build-script"
              },
              "--custom-vm-repo-url": {
                "type": "string",
                "description": "custom vm repository url"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for export"
              },
              "-o": {
                "alias": "--output"
              },
              "--output": {
                "type": "string",
                "description": "write the export data to the provided file path Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "import": {
            "description": "Import blockchain configurations into avalanche-cli. This command suite supports importing from a file created on another computer, or importing from blockchains running public networks (e.g. created manually or with the deprecated subnet-cli) Usage: avalanche blockchain import [flags] avalanche blockchain import [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for import Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche blockchain import [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "file": {
                "description": "The blockchain import command will import a blockchain configuration from a file or a git repository. To import from a file, you can optionally provide the path as a command-line argument. Alternatively, running the command without any arguments triggers an interactive wizard. To import from a repository, go through the wizard. By default, an imported Blockchain doesn't overwrite an existing Blockchain with the same name. To allow overwrites, provide the --force flag. Usage: avalanche blockchain import file [blockchainPath] [flags]",
                "flags": {
                  "--branch": {
                    "type": "string",
                    "description": "the repo branch to use if downloading a new repo"
                  },
                  "-f": {
                    "alias": "--force"
                  },
                  "--force": {
                    "type": "overwrite",
                    "description": "the existing configuration if one exists"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for file"
                  },
                  "--repo": {
                    "type": "string",
                    "description": "the repo to import (ex: ava-labs/avalanche-plugins-core) or url to download the repo from"
                  },
                  "--subnet": {
                    "type": "string",
                    "description": "the subnet configuration to import from the provided repo Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "public": {
                "description": "The blockchain import public command imports a Blockchain configuration from a running network. By default, an imported Blockchain doesn't overwrite an existing Blockchain with the same name. To allow overwrites, provide the --force flag. Usage: avalanche blockchain import public [blockchainPath] [flags]",
                "flags": {
                  "--blockchain-id": {
                    "type": "string",
                    "description": "the blockchain ID"
                  },
                  "--cluster": {
                    "type": "string",
                    "description": "operate on the given cluster"
                  },
                  "--custom": {
                    "type": "use",
                    "description": "a custom VM template"
                  },
                  "--devnet": {
                    "type": "operate",
                    "description": "on a devnet network"
                  },
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "--evm": {
                    "type": "import",
                    "description": "a subnet-evm"
                  },
                  "--force": {
                    "type": "overwrite",
                    "description": "the existing configuration if one exists"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for public"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "-m": {
                    "alias": "--mainnet"
                  },
                  "--mainnet": {
                    "type": "operate",
                    "description": "on mainnet"
                  },
                  "--node-url": {
                    "type": "string",
                    "description": "[optional] URL of an already running subnet validator"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji) Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "join": {
            "description": "The subnet join command configures your validator node to begin validating a new Blockchain. To complete this process, you must have access to the machine running your validator. If the CLI is running on the same machine as your validator, it can generate or update your node's config file automatically. Alternatively, the command can print the necessary instructions to update your node manually. To complete the validation process, the Subnet's admins must add the NodeID of your validator to the Subnet's allow list by calling addValidator with your NodeID. After you update your validator's config, you need to restart your validator manually. If you provide the --avalanchego-config flag, this command attempts to edit the config file at that path. This command currently only supports Blockchains deployed on the Fuji Testnet and Mainnet. Usage: avalanche blockchain join [blockchainName] [flags]",
            "flags": {
              "--avalanchego-config": {
                "type": "string",
                "description": "file path of the avalanchego config file"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--data-dir": {
                "type": "string",
                "description": "path of avalanchego's data dir directory"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "--force-write": {
                "type": "if",
                "description": "true, skip to prompt to overwrite the config file"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for join"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--nodeID": {
                "type": "string",
                "description": "set the NodeID of the validator to check"
              },
              "--plugin-dir": {
                "type": "string",
                "description": "file path of avalanchego's plugin directory"
              },
              "--print": {
                "type": "if",
                "description": "true, print the manual config without prompting"
              },
              "--stake-amount": {
                "type": "uint",
                "description": "amount of tokens to stake on validator"
              },
              "--staking-period": {
                "type": "duration",
                "description": "how long validator validates for after start time"
              },
              "--start-time": {
                "type": "string",
                "description": "start time that validator starts validating"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "list": {
            "description": "The blockchain list command prints the names of all created Blockchain configurations. Without any flags, it prints some general, static information about the Blockchain. With the --deployed flag, the command shows additional information including the VMID, BlockchainID and SubnetID. Usage: avalanche blockchain list [flags]",
            "flags": {
              "--deployed": {
                "type": "show",
                "description": "additional deploy information"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for list Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "publish": {
            "description": "The blockchain publish command publishes the Blockchain's VM to a repository. Usage: avalanche blockchain publish [blockchainName] [flags]",
            "flags": {
              "--alias": {
                "type": "string",
                "description": "We publish to a remote repo, but identify the repo locally under a user-provided alias (e.g. myrepo)."
              },
              "--force": {
                "type": "If",
                "description": "true, ignores if the subnet has been published in the past, and attempts a forced publish."
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for publish"
              },
              "--no-repo-path": {
                "type": "string",
                "description": "Do not let the tool manage file publishing, but have it only generate the files and put them in the location given by this flag."
              },
              "--repo-url": {
                "type": "string",
                "description": "The URL of the repo where we are publishing"
              },
              "--subnet-file-path": {
                "type": "string",
                "description": "Path to the Subnet description file. If not given, a prompting sequence will be initiated."
              },
              "--vm-file-path": {
                "type": "string",
                "description": "Path to the VM description file. If not given, a prompting sequence will be initiated. Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "removeValidator": {
            "description": "The blockchain removeValidator command stops a whitelisted, subnet network validator from validating your deployed Blockchain. To remove the validator from the Subnet's allow list, provide the validator's unique NodeID. You can bypass these prompts by providing the values with flags. Usage: avalanche blockchain removeValidator [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for removeValidator"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji deploy only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--nodeID": {
                "type": "string",
                "description": "set the NodeID of the validator to remove"
              },
              "--output-tx-path": {
                "type": "string",
                "description": "file path of the removeValidator tx"
              },
              "--subnet-auth-keys": {
                "type": "strings",
                "description": "control keys that will be used to authenticate the removeValidator tx"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "stats": {
            "description": "The blockchain stats command prints validator statistics for the given Blockchain. Usage: avalanche blockchain stats [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for stats"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "upgrade": {
            "description": "The blockchain upgrade command suite provides a collection of tools for updating your developmental and deployed Blockchains. Usage: avalanche blockchain upgrade [flags] avalanche blockchain upgrade [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for upgrade Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche blockchain upgrade [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "apply": {
                "description": "Apply generated upgrade bytes to running Blockchain nodes to trigger a network upgrade. For public networks (Fuji Testnet or Mainnet), to complete this process, you must have access to the machine running your validator. If the CLI is running on the same machine as your validator, it can manipulate your node's configuration automatically. Alternatively, the command can print the necessary instructions to upgrade your node manually. After you update your validator's configuration, you need to restart your validator manually. If you provide the --avalanchego-chain-config-dir flag, this command attempts to write the upgrade file at that path. Refer to https://docs.avax.network/nodes/maintain/chain-config-flags#subnet-chain-configs for related documentation. Usage: avalanche blockchain upgrade apply [blockchainName] [flags]",
                "flags": {
                  "--avalanchego-chain-config-dir": {
                    "type": "string",
                    "description": "avalanchego's chain config file directory (default \"/Users/schlanka/.avalanchego/chains\")"
                  },
                  "--config": {
                    "type": "create",
                    "description": "upgrade config for future subnet deployments (same as generate)"
                  },
                  "--force": {
                    "type": "If",
                    "description": "true, don't prompt for confirmation of timestamps in the past"
                  },
                  "--fuji": {
                    "type": "fuji",
                    "description": "apply upgrade existing fuji deployment (alias for `testnet`)"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for apply"
                  },
                  "--local": {
                    "type": "local",
                    "description": "apply upgrade existing local deployment"
                  },
                  "--mainnet": {
                    "type": "mainnet",
                    "description": "apply upgrade existing mainnet deployment"
                  },
                  "--print": {
                    "type": "if",
                    "description": "true, print the manual config without prompting (for public networks only)"
                  },
                  "--testnet": {
                    "type": "testnet",
                    "description": "apply upgrade existing testnet deployment (alias for `fuji`) Global Flags:"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "export": {
                "description": "Export the upgrade bytes file to a location of choice on disk Usage: avalanche blockchain upgrade export [blockchainName] [flags]",
                "flags": {
                  "--force": {
                    "type": "If",
                    "description": "true, overwrite a possibly existing file without prompting"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for export"
                  },
                  "--upgrade-filepath": {
                    "type": "string",
                    "description": "Export upgrade bytes file to location of choice on disk Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "generate": {
                "description": "The blockchain upgrade generate command builds a new upgrade.json file to customize your Blockchain. It guides the user through the process using an interactive wizard. Usage: avalanche blockchain upgrade generate [blockchainName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for generate Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "import": {
                "description": "Import the upgrade bytes file into the local environment Usage: avalanche blockchain upgrade import [blockchainName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for import"
                  },
                  "--upgrade-filepath": {
                    "type": "string",
                    "description": "Import upgrade bytes file into local environment Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "print": {
                "description": "Print the upgrade.json file content Usage: avalanche blockchain upgrade print [blockchainName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for print Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "vm": {
                "description": "The blockchain upgrade vm command enables the user to upgrade their Blockchain's VM binary. The command can upgrade both local Blockchains and publicly deployed Blockchains on Fuji and Mainnet. The command walks the user through an interactive wizard. The user can skip the wizard by providing command line flags. Usage: avalanche blockchain upgrade vm [blockchainName] [flags]",
                "flags": {
                  "--binary": {
                    "type": "string",
                    "description": "Upgrade to custom binary"
                  },
                  "--config": {
                    "type": "upgrade",
                    "description": "config for future subnet deployments"
                  },
                  "--fuji": {
                    "type": "fuji",
                    "description": "upgrade existing fuji deployment (alias for `testnet`)"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for vm"
                  },
                  "--latest": {
                    "type": "upgrade",
                    "description": "to latest version"
                  },
                  "--local": {
                    "type": "local",
                    "description": "upgrade existing local deployment"
                  },
                  "--mainnet": {
                    "type": "mainnet",
                    "description": "upgrade existing mainnet deployment"
                  },
                  "--plugin-dir": {
                    "type": "string",
                    "description": "plugin directory to automatically upgrade VM"
                  },
                  "--print": {
                    "type": "print",
                    "description": "instructions for upgrading"
                  },
                  "--testnet": {
                    "type": "testnet",
                    "description": "upgrade existing testnet deployment (alias for `fuji`)"
                  },
                  "--version": {
                    "type": "string",
                    "description": "Upgrade to custom version Global Flags:"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "validators": {
            "description": "The blockchain validators command lists the validators of a blockchain's subnet and provides several statistics about them. Usage: avalanche blockchain validators [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for validators"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "vmid": {
            "description": "The blockchain vmid command prints the virtual machine ID (VMID) for the given Blockchain. Usage: avalanche blockchain vmid [vmName] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for vmid Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "config": {
        "description": "Customize configuration for Avalanche-CLI Usage: avalanche config [flags] avalanche config [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for config Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche config [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "authorize-cloud-access": {
            "description": "set preferences to authorize access to cloud resources Usage: avalanche config authorize-cloud-access [enable | disable] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for authorize-cloud-access Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "metrics": {
            "description": "set user metrics collection preferences Usage: avalanche config metrics [enable | disable] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for metrics Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "migrate": {
            "description": "migrate command migrates old ~/.avalanche-cli.json and ~/.avalanche-cli/config to /.avalanche-cli/config.json.. Usage: avalanche config migrate [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for migrate Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "singleNode": {
            "description": "set user preference between single node and five nodes local network Usage: avalanche config singleNode [enable | disable] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for singleNode Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "snapshotsAutoSave": {
            "description": "set user preference between auto saving local network snapshots or not Usage: avalanche config snapshotsAutoSave [enable | disable] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for snapshotsAutoSave Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "contract": {
        "description": "The contract command suite provides a collection of tools for deploying and interacting with smart contracts. Usage: avalanche contract [flags] avalanche contract [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for contract Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche contract [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "deploy": {
            "description": "The contract command suite provides a collection of tools for deploying smart contracts. Usage: avalanche contract deploy [flags] avalanche contract deploy [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for deploy Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche contract deploy [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "erc20": {
                "description": "Deploy an ERC20 token into a given Network and Blockchain Usage: avalanche contract deploy erc20 [flags]",
                "flags": {
                  "--blockchain": {
                    "type": "string",
                    "description": "deploy the ERC20 contract into the given CLI blockchain"
                  },
                  "--blockchain-id": {
                    "type": "string",
                    "description": "deploy the ERC20 contract into the given blockchain ID/Alias"
                  },
                  "--c-chain": {
                    "type": "deploy",
                    "description": "the ERC20 contract into C-Chain"
                  },
                  "--cluster": {
                    "type": "string",
                    "description": "operate on the given cluster"
                  },
                  "--devnet": {
                    "type": "operate",
                    "description": "on a devnet network"
                  },
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "--funded": {
                    "type": "string",
                    "description": "set the funded address"
                  },
                  "--genesis-key": {
                    "type": "use",
                    "description": "genesis allocated key as contract deployer"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for erc20"
                  },
                  "--key": {
                    "type": "string",
                    "description": "CLI stored key to use as contract deployer"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "--private-key": {
                    "type": "string",
                    "description": "private key to use as contract deployer"
                  },
                  "--rpc": {
                    "type": "string",
                    "description": "deploy the contract into the given rpc endpoint"
                  },
                  "--subnet": {
                    "type": "string",
                    "description": "deploy the ERC20 contract into the given CLI blockchain"
                  },
                  "--supply": {
                    "type": "uint",
                    "description": "set the token supply"
                  },
                  "--symbol": {
                    "type": "string",
                    "description": "set the token symbol"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji) Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          }
        }
      },
      "help": {
        "description": "Help provides help for any command in the application. Simply type avalanche help [path to command] for full details. Usage: avalanche help [command] [flags]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for help Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions"
          }
        },
        "subcommands": {}
      },
      "ictt": {
        "description": "The ictt command suite provides tools to deploy and manage Interchain Token Transferrers. Usage: avalanche ictt [flags] avalanche ictt [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for ictt Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche ictt [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "deploy": {
            "description": "Deploys a Token Transferrer into a given Network and Subnets Usage: avalanche ictt deploy [flags]",
            "flags": {
              "--c-chain-home": {
                "type": "set",
                "description": "the Transferrer's Home Chain into C-Chain"
              },
              "--c-chain-remote": {
                "type": "set",
                "description": "the Transferrer's Remote Chain into C-Chain"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--deploy-erc20-home": {
                "type": "string",
                "description": "deploy a Transferrer Home for the given Chain's ERC20 Token"
              },
              "--deploy-native-home": {
                "type": "deploy",
                "description": "a Transferrer Home for the Chain's Native Token"
              },
              "--deploy-native-remote": {
                "type": "deploy",
                "description": "a Transferrer Remote for the Chain's Native Token"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for deploy"
              },
              "--home-blockchain": {
                "type": "string",
                "description": "set the Transferrer's Home Chain into the given CLI blockchain"
              },
              "--home-genesis-key": {
                "type": "use",
                "description": "genesis allocated key to deploy Transferrer Home"
              },
              "--home-key": {
                "type": "string",
                "description": "CLI stored key to use to deploy Transferrer Home"
              },
              "--home-private-key": {
                "type": "string",
                "description": "private key to use to deploy Transferrer Home"
              },
              "--home-rpc": {
                "type": "string",
                "description": "use the given RPC URL to connect to the home blockchain"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "--remote-blockchain": {
                "type": "string",
                "description": "set the Transferrer's Remote Chain into the given CLI blockchain"
              },
              "--remote-genesis-key": {
                "type": "use",
                "description": "genesis allocated key to deploy Transferrer Remote"
              },
              "--remote-key": {
                "type": "string",
                "description": "CLI stored key to use to deploy Transferrer Remote"
              },
              "--remote-private-key": {
                "type": "string",
                "description": "private key to use to deploy Transferrer Remote"
              },
              "--remote-rpc": {
                "type": "string",
                "description": "use the given RPC URL to connect to the remote blockchain"
              },
              "--remote-token-decimals": {
                "type": "uint8",
                "description": "use the given number of token decimals for the Transferrer Remote [defaults to token home's decimals (18 for a new wrapped native home token)]"
              },
              "--remove-minter-admin": {
                "type": "remove",
                "description": "the native minter precompile admin found on remote blockchain genesis"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--use-home": {
                "type": "string",
                "description": "use the given Transferrer's Home Address"
              },
              "--version": {
                "type": "string",
                "description": "tag/branch/commit of Avalanche Interchain Token Transfer (ICTT) to be used (defaults to main branch) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "interchain": {
        "description": "The interchain command suite provides a collection of tools to set and manage interoperability between blockchains. Usage: avalanche interchain [flags] avalanche interchain [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for interchain Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche interchain [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "tokenTransferrer": {
            "description": "The tokenTransfer command suite provides tools to deploy and manage Token Transferrers. Usage: avalanche interchain tokenTransferrer [flags] avalanche interchain tokenTransferrer [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for tokenTransferrer Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche interchain tokenTransferrer [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "deploy": {
                "description": "Deploys a Token Transferrer into a given Network and Subnets Usage: avalanche interchain tokenTransferrer deploy [flags]",
                "flags": {
                  "--c-chain-home": {
                    "type": "set",
                    "description": "the Transferrer's Home Chain into C-Chain"
                  },
                  "--c-chain-remote": {
                    "type": "set",
                    "description": "the Transferrer's Remote Chain into C-Chain"
                  },
                  "--cluster": {
                    "type": "string",
                    "description": "operate on the given cluster"
                  },
                  "--deploy-erc20-home": {
                    "type": "string",
                    "description": "deploy a Transferrer Home for the given Chain's ERC20 Token"
                  },
                  "--deploy-native-home": {
                    "type": "deploy",
                    "description": "a Transferrer Home for the Chain's Native Token"
                  },
                  "--deploy-native-remote": {
                    "type": "deploy",
                    "description": "a Transferrer Remote for the Chain's Native Token"
                  },
                  "--devnet": {
                    "type": "operate",
                    "description": "on a devnet network"
                  },
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for deploy"
                  },
                  "--home-blockchain": {
                    "type": "string",
                    "description": "set the Transferrer's Home Chain into the given CLI blockchain"
                  },
                  "--home-genesis-key": {
                    "type": "use",
                    "description": "genesis allocated key to deploy Transferrer Home"
                  },
                  "--home-key": {
                    "type": "string",
                    "description": "CLI stored key to use to deploy Transferrer Home"
                  },
                  "--home-private-key": {
                    "type": "string",
                    "description": "private key to use to deploy Transferrer Home"
                  },
                  "--home-rpc": {
                    "type": "string",
                    "description": "use the given RPC URL to connect to the home blockchain"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "--remote-blockchain": {
                    "type": "string",
                    "description": "set the Transferrer's Remote Chain into the given CLI blockchain"
                  },
                  "--remote-genesis-key": {
                    "type": "use",
                    "description": "genesis allocated key to deploy Transferrer Remote"
                  },
                  "--remote-key": {
                    "type": "string",
                    "description": "CLI stored key to use to deploy Transferrer Remote"
                  },
                  "--remote-private-key": {
                    "type": "string",
                    "description": "private key to use to deploy Transferrer Remote"
                  },
                  "--remote-rpc": {
                    "type": "string",
                    "description": "use the given RPC URL to connect to the remote blockchain"
                  },
                  "--remote-token-decimals": {
                    "type": "uint8",
                    "description": "use the given number of token decimals for the Transferrer Remote [defaults to token home's decimals (18 for a new wrapped native home token)]"
                  },
                  "--remove-minter-admin": {
                    "type": "remove",
                    "description": "the native minter precompile admin found on remote blockchain genesis"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji)"
                  },
                  "--use-home": {
                    "type": "string",
                    "description": "use the given Transferrer's Home Address"
                  },
                  "--version": {
                    "type": "string",
                    "description": "tag/branch/commit of Avalanche Interchain Token Transfer (ICTT) to be used (defaults to main branch) Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          }
        }
      },
      "key": {
        "description": "The key command suite provides a collection of tools for creating and managing signing keys. You can use these keys to deploy Subnets to the Fuji Testnet, but these keys are NOT suitable to use in production environments. DO NOT use these keys on Mainnet. To get started, use the key create command. Usage: avalanche key [flags] avalanche key [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for key Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche key [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "create": {
            "description": "The key create command generates a new private key to use for creating and controlling test Subnets. Keys generated by this command are NOT cryptographically secure enough to use in production environments. DO NOT use these keys on Mainnet. The command works by generating a secp256 key and storing it with the provided keyName. You can use this key in other commands by providing this keyName. If you'd like to import an existing key instead of generating one from scratch, provide the --file flag. Usage: avalanche key create [keyName] [flags]",
            "flags": {
              "--file": {
                "type": "string",
                "description": "import the key from an existing key file"
              },
              "-f": {
                "alias": "--force"
              },
              "--force": {
                "type": "overwrite",
                "description": "an existing key with the same name"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for create"
              },
              "--skip-balances": {
                "type": "do",
                "description": "not query public network balances for an imported key Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "delete": {
            "description": "The key delete command deletes an existing signing key. To delete a key, provide the keyName. The command prompts for confirmation before deleting the key. To skip the confirmation, provide the --force flag. Usage: avalanche key delete [keyName] [flags]",
            "flags": {
              "-f": {
                "alias": "--force"
              },
              "--force": {
                "type": "delete",
                "description": "the key without confirmation"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for delete Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "export": {
            "description": "The key export command exports a created signing key. You can use an exported key in other applications or import it into another instance of Avalanche-CLI. By default, the tool writes the hex encoded key to stdout. If you provide the --output flag, the command writes the key to a file of your choosing. Usage: avalanche key export [keyName] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for export"
              },
              "-o": {
                "alias": "--output"
              },
              "--output": {
                "type": "string",
                "description": "write the key to the provided file path Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "list": {
            "description": "The key list command prints information for all stored signing keys or for the ledger addresses associated to certain indices. Usage: avalanche key list [flags]",
            "flags": {
              "-a": {
                "alias": "--all-networks"
              },
              "--all-networks": {
                "type": "list",
                "description": "all network addresses"
              },
              "--blockchains": {
                "type": "strings",
                "description": "blockchains to show information about (p=p-chain, x=x-chain, c=c-chain, and blockchain names) (default p,x,c)"
              },
              "-c": {
                "alias": "--cchain"
              },
              "--cchain": {
                "type": "list",
                "description": "C-Chain addresses (default true)"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for list"
              },
              "--keys": {
                "type": "strings",
                "description": "list addresses for the given keys"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "uints",
                "description": "list ledger addresses for the given indices (default [])"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--pchain": {
                "type": "list",
                "description": "P-Chain addresses (default true)"
              },
              "--subnets": {
                "type": "strings",
                "description": "subnets to show information about (p=p-chain, x=x-chain, c=c-chain, and subnet names) (default p,x,c)"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--tokens": {
                "type": "strings",
                "description": "provide balance information for the given token contract addresses (Evm only) (default [Native])"
              },
              "--use-gwei": {
                "type": "use",
                "description": "gwei for EVM balances"
              },
              "-n": {
                "alias": "--use-nano-avax"
              },
              "--use-nano-avax": {
                "type": "use",
                "description": "nano Avax for balances"
              },
              "--xchain": {
                "type": "list",
                "description": "X-Chain addresses (default true) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "transfer": {
            "description": "The key transfer command allows to transfer funds between stored keys or ledger addresses. Usage: avalanche key transfer [options] [flags]",
            "flags": {
              "-o": {
                "alias": "--amount"
              },
              "--amount": {
                "type": "float",
                "description": "amount to send or receive (AVAX or TOKEN units)"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "-a": {
                "alias": "--destination-addr"
              },
              "--destination-addr": {
                "type": "string",
                "description": "destination address"
              },
              "--destination-key": {
                "type": "string",
                "description": "key associated to a destination address"
              },
              "--destination-subnet": {
                "type": "string",
                "description": "subnet where the funds will be sent (token transferrer experimental)"
              },
              "--destination-transferrer-address": {
                "type": "string",
                "description": "token transferrer address at the destination subnet (token transferrer experimental)"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "--force": {
                "type": "avoid",
                "description": "transfer confirmation"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "--fund-p-chain": {
                "type": "fund",
                "description": "P-Chain account on destination"
              },
              "--fund-x-chain": {
                "type": "fund",
                "description": "X-Chain account on destination"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for transfer"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "key associated to the sender or receiver address"
              },
              "-i": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "uint32",
                "description": "ledger index associated to the sender or receiver address (default 32768)"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--origin-subnet": {
                "type": "string",
                "description": "subnet where the funds belong (token transferrer experimental)"
              },
              "--origin-transferrer-address": {
                "type": "string",
                "description": "token transferrer address at the origin subnet (token transferrer experimental)"
              },
              "-g": {
                "alias": "--receive"
              },
              "--receive": {
                "type": "receive",
                "description": "the transfer"
              },
              "-r": {
                "alias": "--receive-recovery-step"
              },
              "--receive-recovery-step": {
                "type": "uint",
                "description": "receive step to use for multiple step transaction recovery"
              },
              "-s": {
                "alias": "--send"
              },
              "--send": {
                "type": "send",
                "description": "the transfer"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "network": {
        "description": "The network command suite provides a collection of tools for managing local Subnet deployments. When you deploy a Subnet locally, it runs on a local, multi-node Avalanche network. The subnet deploy command starts this network in the background. This command suite allows you to shutdown, restart, and clear that network. This network currently supports multiple, concurrently deployed Subnets. Usage: avalanche network [flags] avalanche network [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for network Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche network [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "clean": {
            "description": "The network clean command shuts down your local, multi-node network. All deployed Subnets shutdown and delete their state. You can restart the network by deploying a new Subnet configuration. Usage: avalanche network clean [flags]",
            "flags": {
              "--hard": {
                "type": "Also",
                "description": "clean downloaded avalanchego and plugin binaries"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for clean Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "start": {
            "description": "The network start command starts a local, multi-node Avalanche network on your machine. By default, the command loads the default snapshot. If you provide the --snapshot-name flag, the network loads that snapshot instead. The command fails if the local network is already running. Usage: avalanche network start [flags]",
            "flags": {
              "--avalanchego-path": {
                "type": "string",
                "description": "use this avalanchego binary path"
              },
              "--avalanchego-version": {
                "type": "string",
                "description": "use this version of avalanchego (ex: v1.17.12) (default \"latest\")"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for start"
              },
              "--snapshot-name": {
                "type": "string",
                "description": "name of snapshot to use to start the network from (default \"default-1654102509\") Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "status": {
            "description": "The network status command prints whether or not a local Avalanche network is running and some basic stats about the network. Usage: avalanche network status [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for status Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "stop": {
            "description": "The network stop command shuts down your local, multi-node network. All deployed Subnets shutdown gracefully and save their state. If you provide the --snapshot-name flag, the network saves its state under this named snapshot. You can reload this snapshot with network start --snapshot-name <snapshotName>. Otherwise, the network saves to the default snapshot, overwriting any existing state. You can reload the default snapshot with network start. Usage: avalanche network stop [flags]",
            "flags": {
              "--dont-save": {
                "type": "do",
                "description": "not save snapshot, just stop the network"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for stop"
              },
              "--snapshot-name": {
                "type": "string",
                "description": "name of snapshot to use to save network state into (default \"default-1654102509\") Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "node": {
        "description": "The node command suite provides a collection of tools for creating and maintaining validators on Avalanche Network. To get started, use the node create command wizard to walk through the configuration to make your node a primary validator on Avalanche public network. You can use the rest of the commands to maintain your node and make your node a Subnet Validator. Usage: avalanche node [flags] avalanche node [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for node Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche node [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "addDashboard": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node addDashboard command adds custom dashboard to the Grafana monitoring dashboard for the cluster. Usage: avalanche node addDashboard [clusterName] [flags]",
            "flags": {
              "--add-grafana-dashboard": {
                "type": "string",
                "description": "path to additional grafana dashboard json file"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for addDashboard"
              },
              "--subnet": {
                "type": "string",
                "description": "subnet that the dasbhoard is intended for (if any) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "create": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node create command sets up a validator on a cloud server of your choice. The validator will be validating the Avalanche Primary Network and Subnet of your choice. By default, the command runs an interactive wizard. It walks you through all the steps you need to set up a validator. Once this command is completed, you will have to wait for the validator to finish bootstrapping on the primary network before running further commands on it, e.g. validating a Subnet. You can check the bootstrapping status by running avalanche node status The created node will be part of group of validators called <clusterName> and users can call node commands with <clusterName> so that the command will apply to all nodes in the cluster Usage: avalanche node create [clusterName] [flags]",
            "flags": {
              "--add-grafana-dashboard": {
                "type": "string",
                "description": "path to additional grafana dashboard json file"
              },
              "--alternative-key-pair-name": {
                "type": "string",
                "description": "key pair name to use if default one generates conflicts"
              },
              "--authorize-access": {
                "type": "authorize",
                "description": "CLI to create cloud resources"
              },
              "--auto-replace-keypair": {
                "type": "automatically",
                "description": "replaces key pair to access node if previous key pair is not found"
              },
              "--avalanchego-version-from-subnet": {
                "type": "string",
                "description": "install latest avalanchego version, that is compatible with the given subnet, on node/s"
              },
              "--aws": {
                "type": "create",
                "description": "node/s in AWS cloud"
              },
              "--aws-profile": {
                "type": "string",
                "description": "aws profile to use (default \"default\")"
              },
              "--aws-volume-iops": {
                "type": "int",
                "description": "AWS iops (for gp3, io1, and io2 volume types only) (default 3000)"
              },
              "--aws-volume-size": {
                "type": "int",
                "description": "AWS volume size in GB (default 1000)"
              },
              "--aws-volume-throughput": {
                "type": "int",
                "description": "AWS throughput in MiB/s (for gp3 volume type only) (default 125)"
              },
              "--aws-volume-type": {
                "type": "string",
                "description": "AWS volume type (default \"gp3\")"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--custom-avalanchego-version": {
                "type": "string",
                "description": "install given avalanchego version on node/s"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--enable-monitoring": {
                "type": "set",
                "description": "up Prometheus monitoring for created nodes. This option creates a separate monitoring cloud instance and incures additional cost"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "--gcp": {
                "type": "create",
                "description": "node/s in GCP cloud"
              },
              "--gcp-credentials": {
                "type": "string",
                "description": "use given GCP credentials"
              },
              "--gcp-project": {
                "type": "string",
                "description": "use given GCP project"
              },
              "--grafana-pkg": {
                "type": "string",
                "description": "use grafana pkg instead of apt repo(by default), for example https://dl.grafana.com/oss/release/grafana_10.4.1_amd64.deb"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for create"
              },
              "--latest-avalanchego-pre-release-version": {
                "type": "install",
                "description": "latest avalanchego pre-release version on node/s"
              },
              "--latest-avalanchego-version": {
                "type": "install",
                "description": "latest avalanchego release version on node/s"
              },
              "--node-type": {
                "type": "string",
                "description": "cloud instance type. Use 'default' to use recommended default instance type"
              },
              "--num-apis": {
                "type": "ints",
                "description": "number of API nodes(nodes without stake) to create in the new Devnet"
              },
              "--num-validators": {
                "type": "ints",
                "description": "number of nodes to create per region(s). Use comma to separate multiple numbers for each region in the same order as --region flag"
              },
              "--public-http-port": {
                "type": "allow",
                "description": "public access to avalanchego HTTP port"
              },
              "--region": {
                "type": "strings",
                "description": "create node(s) in given region(s). Use comma to separate multiple regions"
              },
              "--ssh-agent-identity": {
                "type": "string",
                "description": "use given ssh identity(only for ssh agent). If not set, default will be used"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--use-ssh-agent": {
                "type": "use",
                "description": "ssh agent(ex: Yubikey) for ssh auth"
              },
              "--use-static-ip": {
                "type": "attach",
                "description": "static Public IP on cloud servers (default true) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "destroy": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node destroy command terminates all running nodes in cloud server and deletes all storage disks. If there is a static IP address attached, it will be released. Usage: avalanche node destroy [clusterName] [flags]",
            "flags": {
              "--all": {
                "type": "destroy",
                "description": "all existing clusters created by Avalanche CLI"
              },
              "--authorize-access": {
                "type": "authorize",
                "description": "CLI to release cloud resources"
              },
              "-y": {
                "alias": "--authorize-all"
              },
              "--authorize-all": {
                "type": "authorize",
                "description": "all CLI requests"
              },
              "--authorize-remove": {
                "type": "authorize",
                "description": "CLI to remove all local files related to cloud nodes"
              },
              "--aws-profile": {
                "type": "string",
                "description": "aws profile to use (default \"default\")"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for destroy Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "devnet": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node devnet command suite provides a collection of commands related to devnets. You can check the updated status by calling avalanche node status <clusterName> Usage: avalanche node devnet [flags] avalanche node devnet [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for devnet Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche node devnet [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "deploy": {
                "description": "(ALPHA Warning) This command is currently in experimental mode. The node devnet deploy command deploys a subnet into a devnet cluster, creating subnet and blockchain txs for it. It saves the deploy info both locally and remotely. Usage: avalanche node devnet deploy [clusterName] [subnetName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for deploy"
                  },
                  "--no-checks": {
                    "type": "do",
                    "description": "not check for healthy status or rpc compatibility of nodes against subnet"
                  },
                  "--subnet-aliases": {
                    "type": "strings",
                    "description": "additional subnet aliases to be used for RPC calls in addition to subnet blockchain name"
                  },
                  "--subnet-only": {
                    "type": "only",
                    "description": "create a subnet Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "wiz": {
                "description": "(ALPHA Warning) This command is currently in experimental mode. The node wiz command creates a devnet and deploys, sync and validate a subnet into it. It creates the subnet if so needed. Usage: avalanche node devnet wiz [clusterName] [subnetName] [flags]",
                "flags": {
                  "--add-grafana-dashboard": {
                    "type": "string",
                    "description": "path to additional grafana dashboard json file"
                  },
                  "--alternative-key-pair-name": {
                    "type": "string",
                    "description": "key pair name to use if default one generates conflicts"
                  },
                  "--authorize-access": {
                    "type": "authorize",
                    "description": "CLI to create cloud resources"
                  },
                  "--auto-replace-keypair": {
                    "type": "automatically",
                    "description": "replaces key pair to access node if previous key pair is not found"
                  },
                  "--aws": {
                    "type": "create",
                    "description": "node/s in AWS cloud"
                  },
                  "--aws-profile": {
                    "type": "string",
                    "description": "aws profile to use (default \"default\")"
                  },
                  "--aws-volume-iops": {
                    "type": "int",
                    "description": "AWS iops (for gp3, io1, and io2 volume types only) (default 3000)"
                  },
                  "--aws-volume-size": {
                    "type": "int",
                    "description": "AWS volume size in GB (default 1000)"
                  },
                  "--aws-volume-throughput": {
                    "type": "int",
                    "description": "AWS throughput in MiB/s (for gp3 volume type only) (default 125)"
                  },
                  "--aws-volume-type": {
                    "type": "string",
                    "description": "AWS volume type (default \"gp3\")"
                  },
                  "--chain-config": {
                    "type": "string",
                    "description": "path to the chain configuration for subnet"
                  },
                  "--custom-avalanchego-version": {
                    "type": "string",
                    "description": "install given avalanchego version on node/s"
                  },
                  "--custom-subnet": {
                    "type": "use",
                    "description": "a custom VM as the subnet virtual machine"
                  },
                  "--custom-vm-branch": {
                    "type": "string",
                    "description": "custom vm branch or commit"
                  },
                  "--custom-vm-build-script": {
                    "type": "string",
                    "description": "custom vm build-script"
                  },
                  "--custom-vm-repo-url": {
                    "type": "string",
                    "description": "custom vm repository url"
                  },
                  "--default-validator-params": {
                    "type": "use",
                    "description": "default weight/start/duration params for subnet validator"
                  },
                  "--deploy-teleporter-messenger": {
                    "type": "deploy",
                    "description": "Interchain Messenger (default true)"
                  },
                  "--deploy-teleporter-registry": {
                    "type": "deploy",
                    "description": "Interchain Registry (default true)"
                  },
                  "--enable-monitoring": {
                    "type": "set",
                    "description": "up Prometheus monitoring for created nodes. Please note that this option creates a separate monitoring instance and incures additional cost"
                  },
                  "--evm-chain-id": {
                    "type": "uint",
                    "description": "chain ID to use with Subnet-EVM"
                  },
                  "--evm-defaults": {
                    "type": "use",
                    "description": "default production settings with Subnet-EVM"
                  },
                  "--evm-production-defaults": {
                    "type": "use",
                    "description": "default production settings for your blockchain"
                  },
                  "--evm-subnet": {
                    "type": "use",
                    "description": "Subnet-EVM as the subnet virtual machine"
                  },
                  "--evm-test-defaults": {
                    "type": "use",
                    "description": "default test settings for your blockchain"
                  },
                  "--evm-token": {
                    "type": "string",
                    "description": "token name to use with Subnet-EVM"
                  },
                  "--evm-version": {
                    "type": "string",
                    "description": "version of Subnet-EVM to use"
                  },
                  "--force-subnet-create": {
                    "type": "overwrite",
                    "description": "the existing subnet configuration if one exists"
                  },
                  "--gcp": {
                    "type": "create",
                    "description": "node/s in GCP cloud"
                  },
                  "--gcp-credentials": {
                    "type": "string",
                    "description": "use given GCP credentials"
                  },
                  "--gcp-project": {
                    "type": "string",
                    "description": "use given GCP project"
                  },
                  "--grafana-pkg": {
                    "type": "string",
                    "description": "use grafana pkg instead of apt repo(by default), for example https://dl.grafana.com/oss/release/grafana_10.4.1_amd64.deb"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for wiz"
                  },
                  "--latest-avalanchego-pre-release-version": {
                    "type": "install",
                    "description": "latest avalanchego pre-release version on node/s"
                  },
                  "--latest-avalanchego-version": {
                    "type": "install",
                    "description": "latest avalanchego release version on node/s"
                  },
                  "--latest-evm-version": {
                    "type": "use",
                    "description": "latest Subnet-EVM released version"
                  },
                  "--latest-pre-released-evm-version": {
                    "type": "use",
                    "description": "latest Subnet-EVM pre-released version"
                  },
                  "--node-config": {
                    "type": "string",
                    "description": "path to avalanchego node configuration for subnet"
                  },
                  "--node-type": {
                    "type": "string",
                    "description": "cloud instance type. Use 'default' to use recommended default instance type"
                  },
                  "--num-apis": {
                    "type": "ints",
                    "description": "number of API nodes(nodes without stake) to create in the new Devnet"
                  },
                  "--num-validators": {
                    "type": "ints",
                    "description": "number of nodes to create per region(s). Use comma to separate multiple numbers for each region in the same order as --region flag"
                  },
                  "--public-http-port": {
                    "type": "allow",
                    "description": "public access to avalanchego HTTP port"
                  },
                  "--region": {
                    "type": "strings",
                    "description": "create node/s in given region(s). Use comma to separate multiple regions"
                  },
                  "--relayer": {
                    "type": "run",
                    "description": "AWM relayer when deploying the vm"
                  },
                  "--ssh-agent-identity": {
                    "type": "string",
                    "description": "use given ssh identity(only for ssh agent). If not set, default will be used."
                  },
                  "--subnet-aliases": {
                    "type": "strings",
                    "description": "additional subnet aliases to be used for RPC calls in addition to subnet blockchain name"
                  },
                  "--subnet-config": {
                    "type": "string",
                    "description": "path to the subnet configuration for subnet"
                  },
                  "--subnet-genesis": {
                    "type": "string",
                    "description": "file path of the subnet genesis"
                  },
                  "--teleporter": {
                    "type": "generate",
                    "description": "a teleporter-ready vm"
                  },
                  "--teleporter-messenger-contract-address-path": {
                    "type": "string",
                    "description": "path to a teleporter messenger contract address file"
                  },
                  "--teleporter-messenger-deployer-address-path": {
                    "type": "string",
                    "description": "path to a teleporter messenger deployer address file"
                  },
                  "--teleporter-messenger-deployer-tx-path": {
                    "type": "string",
                    "description": "path to a teleporter messenger deployer tx file"
                  },
                  "--teleporter-registry-bytecode-path": {
                    "type": "string",
                    "description": "path to a teleporter registry bytecode file"
                  },
                  "--teleporter-version": {
                    "type": "string",
                    "description": "teleporter version to deploy (default \"latest\")"
                  },
                  "--use-ssh-agent": {
                    "type": "use",
                    "description": "ssh agent for ssh"
                  },
                  "--use-static-ip": {
                    "type": "attach",
                    "description": "static Public IP on cloud servers (default true)"
                  },
                  "--validators": {
                    "type": "strings",
                    "description": "deploy subnet into given comma separated list of validators. defaults to all cluster nodes Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "export": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node export command exports cluster configuration and its nodes config to a text file. If no file is specified, the configuration is printed to the stdout. Use --include-secrets to include keys in the export. In this case please keep the file secure as it contains sensitive information. Exported cluster configuration without secrets can be imported by another user using node import command. Usage: avalanche node export [clusterName] [flags]",
            "flags": {
              "--file": {
                "type": "string",
                "description": "specify the file to export the cluster configuration to"
              },
              "--force": {
                "type": "overwrite",
                "description": "the file if it exists"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for export"
              },
              "--include-secrets": {
                "type": "include",
                "description": "keys in the export Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "import": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node import command imports cluster configuration and its nodes configuration from a text file created from the node export command. Prior to calling this command, call node whitelist command to have your SSH public key and IP whitelisted by the cluster owner. This will enable you to use avalanche-cli commands to manage the imported cluster. Please note, that this imported cluster will be considered as EXTERNAL by avalanche-cli, so some commands affecting cloud nodes like node create or node destroy will be not applicable to it. Usage: avalanche node import [clusterName] [flags]",
            "flags": {
              "--file": {
                "type": "string",
                "description": "specify the file to export the cluster configuration to"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for import Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "list": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node list command lists all clusters together with their nodes. Usage: avalanche node list [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for list Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "loadtest": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node loadtest command suite starts and stops a load test for an existing devnet cluster. Usage: avalanche node loadtest [flags] avalanche node loadtest [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for loadtest Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche node loadtest [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "start": {
                "description": "(ALPHA Warning) This command is currently in experimental mode. The node loadtest command starts load testing for an existing devnet cluster. If the cluster does not have an existing load test host, the command creates a separate cloud server and builds the load test binary based on the provided load test Git Repo URL and load test binary build command. The command will then run the load test binary based on the provided load test run command. Usage: avalanche node loadtest start [loadtestName] [clusterName] [blockchainName] [flags]",
                "flags": {
                  "--authorize-access": {
                    "type": "authorize",
                    "description": "CLI to create cloud resources"
                  },
                  "--aws": {
                    "type": "create",
                    "description": "loadtest node in AWS cloud"
                  },
                  "--aws-profile": {
                    "type": "string",
                    "description": "aws profile to use (default \"default\")"
                  },
                  "--gcp": {
                    "type": "create",
                    "description": "loadtest in GCP cloud"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for start"
                  },
                  "--load-test-branch": {
                    "type": "string",
                    "description": "load test branch or commit"
                  },
                  "--load-test-build-cmd": {
                    "type": "string",
                    "description": "command to build load test binary"
                  },
                  "--load-test-cmd": {
                    "type": "string",
                    "description": "command to run load test"
                  },
                  "--load-test-repo": {
                    "type": "string",
                    "description": "load test repo url to use"
                  },
                  "--node-type": {
                    "type": "string",
                    "description": "cloud instance type for loadtest script"
                  },
                  "--region": {
                    "type": "string",
                    "description": "create load test node in a given region"
                  },
                  "--ssh-agent-identity": {
                    "type": "string",
                    "description": "use given ssh identity(only for ssh agent). If not set, default will be used"
                  },
                  "--use-ssh-agent": {
                    "type": "use",
                    "description": "ssh agent(ex: Yubikey) for ssh auth Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "stop": {
                "description": "(ALPHA Warning) This command is currently in experimental mode. The node loadtest stop command stops load testing for an existing devnet cluster and terminates the separate cloud server created to host the load test. Usage: avalanche node loadtest stop [clusterName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for stop"
                  },
                  "--load-test": {
                    "type": "strings",
                    "description": "stop specified load test node(s). Use comma to separate multiple load test instance names Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "refresh-ips": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node refresh-ips command obtains the current IP for all nodes with dynamic IPs in the cluster, and updates the local node information used by CLI commands. Usage: avalanche node refresh-ips [clusterName] [flags]",
            "flags": {
              "--aws-profile": {
                "type": "string",
                "description": "aws profile to use (default \"default\")"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for refresh-ips Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "resize": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node resize command can change the amount of CPU, memory and disk space available for the cluster nodes. Usage: avalanche node resize [clusterName] [flags]",
            "flags": {
              "--aws-profile": {
                "type": "string",
                "description": "aws profile to use (default \"default\")"
              },
              "--disk-size": {
                "type": "string",
                "description": "Disk size to resize in Gb (e.g. 1000Gb)"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for resize"
              },
              "--node-type": {
                "type": "string",
                "description": "Node type to resize (e.g. t3.2xlarge) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "scp": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node scp command securely copies files to and from nodes. Remote source or destionation can be specified using the following format: [clusterName|nodeID|instanceID|IP]:/path/to/file. Regular expressions are supported for the source files like /tmp/*.txt. File transfer to the nodes are parallelized. IF source or destination is cluster, the other should be a local file path. If both destinations are remote, they must be nodes for the same cluster and not clusters themselves. For example: $ avalanche node scp [cluster1|node1]:/tmp/file.txt /tmp/file.txt $ avalanche node scp /tmp/file.txt [cluster1|NodeID-XXXX]:/tmp/file.txt $ avalanche node scp node1:/tmp/file.txt NodeID-XXXX:/tmp/file.txt Usage: avalanche node scp SOURCE DEST [flags]",
            "flags": {
              "--compress": {
                "type": "use",
                "description": "compression for ssh"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for scp"
              },
              "--recursive": {
                "type": "copy",
                "description": "directories recursively"
              },
              "--with-loadtest": {
                "type": "include",
                "description": "loadtest node for scp cluster operations"
              },
              "--with-monitor": {
                "type": "include",
                "description": "monitoring node for scp cluster operations Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "ssh": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node ssh command execute a given command [cmd] using ssh on all nodes in the cluster if ClusterName is given. If no command is given, just prints the ssh command to be used to connect to each node in the cluster. For provided NodeID or InstanceID or IP, the command [cmd] will be executed on that node. If no [cmd] is provided for the node, it will open ssh shell there. Usage: avalanche node ssh [clusterName|nodeID|instanceID|IP] [cmd] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for ssh"
              },
              "--parallel": {
                "type": "run",
                "description": "ssh command on all nodes in parallel"
              },
              "--with-loadtest": {
                "type": "include",
                "description": "loadtest node for ssh cluster operations"
              },
              "--with-monitor": {
                "type": "include",
                "description": "monitoring node for ssh cluster operations Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "status": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node status command gets the bootstrap status of all nodes in a cluster with the Primary Network. If no cluster is given, defaults to node list behaviour. To get the bootstrap status of a node with a Blockchain, use --blockchain flag Usage: avalanche node status [clusterName] [flags]",
            "flags": {
              "--blockchain": {
                "type": "string",
                "description": "specify the blockchain the node is syncing with"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for status"
              },
              "--subnet": {
                "type": "string",
                "description": "specify the blockchain the node is syncing with Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "sync": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node sync command enables all nodes in a cluster to be bootstrapped to a Blockchain. You can check the blockchain bootstrap status by calling avalanche node status <clusterName> --blockchain <blockchainName> Usage: avalanche node sync [clusterName] [blockchainName] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for sync"
              },
              "--no-checks": {
                "type": "do",
                "description": "not check for bootstrapped/healthy status or rpc compatibility of nodes against subnet"
              },
              "--subnet-aliases": {
                "type": "strings",
                "description": "subnet alias to be used for RPC calls. defaults to subnet blockchain ID"
              },
              "--validators": {
                "type": "strings",
                "description": "sync subnet into given comma separated list of validators. defaults to all cluster nodes Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "update": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node update command suite provides a collection of commands for nodes to update their avalanchego or VM config. You can check the status after update by calling avalanche node status Usage: avalanche node update [flags] avalanche node update [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for update Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche node update [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "subnet": {
                "description": "(ALPHA Warning) This command is currently in experimental mode. The node update subnet command updates all nodes in a cluster with latest Subnet configuration and VM for custom VM. You can check the updated subnet bootstrap status by calling avalanche node status <clusterName> --subnet <subnetName> Usage: avalanche node update subnet [clusterName] [subnetName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for subnet Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "upgrade": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node update command suite provides a collection of commands for nodes to update their avalanchego or VM version. You can check the status after upgrade by calling avalanche node status Usage: avalanche node upgrade [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for upgrade Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "validate": {
            "description": "(ALPHA Warning) This command is currently in experimental mode. The node validate command suite provides a collection of commands for nodes to join the Primary Network and Subnets as validators. If any of the commands is run before the nodes are bootstrapped on the Primary Network, the command will fail. You can check the bootstrap status by calling avalanche node status <clusterName> Usage: avalanche node validate [flags] avalanche node validate [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for validate Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche node validate [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "primary": {
                "description": "(ALPHA Warning) This command is currently in experimental mode. The node validate primary command enables all nodes in a cluster to be validators of Primary Network. Usage: avalanche node validate primary [clusterName] [flags]",
                "flags": {
                  "-e": {
                    "alias": "--ewoq"
                  },
                  "--ewoq": {
                    "type": "use",
                    "description": "ewoq key [fuji/devnet only]"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for primary"
                  },
                  "-k": {
                    "alias": "--key"
                  },
                  "--key": {
                    "type": "string",
                    "description": "select the key to use [fuji only]"
                  },
                  "-g": {
                    "alias": "--ledger"
                  },
                  "--ledger": {
                    "type": "use",
                    "description": "ledger instead of key (always true on mainnet, defaults to false on fuji/devnet)"
                  },
                  "--ledger-addrs": {
                    "type": "strings",
                    "description": "use the given ledger addresses"
                  },
                  "--stake-amount": {
                    "type": "uint",
                    "description": "how many AVAX to stake in the validator"
                  },
                  "--staking-period": {
                    "type": "duration",
                    "description": "how long validator validates for after start time"
                  },
                  "--start-time": {
                    "type": "string",
                    "description": "UTC start time when this validator starts validating, in 'YYYY-MM-DD HH:MM:SS' format Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "subnet": {
                "description": "(ALPHA Warning) This command is currently in experimental mode. The node validate subnet command enables all nodes in a cluster to be validators of a Subnet. If the command is run before the nodes are Primary Network validators, the command will first make the nodes Primary Network validators before making them Subnet validators. If The command is run before the nodes are bootstrapped on the Primary Network, the command will fail. You can check the bootstrap status by calling avalanche node status <clusterName> If The command is run before the nodes are synced to the subnet, the command will fail. You can check the subnet sync status by calling avalanche node status <clusterName> --subnet <subnetName> Usage: avalanche node validate subnet [clusterName] [subnetName] [flags]",
                "flags": {
                  "--default-validator-params": {
                    "type": "use",
                    "description": "default weight/start/duration params for subnet validator"
                  },
                  "-e": {
                    "alias": "--ewoq"
                  },
                  "--ewoq": {
                    "type": "use",
                    "description": "ewoq key [fuji/devnet only]"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for subnet"
                  },
                  "-k": {
                    "alias": "--key"
                  },
                  "--key": {
                    "type": "string",
                    "description": "select the key to use [fuji/devnet only]"
                  },
                  "-g": {
                    "alias": "--ledger"
                  },
                  "--ledger": {
                    "type": "use",
                    "description": "ledger instead of key (always true on mainnet, defaults to false on fuji/devnet)"
                  },
                  "--ledger-addrs": {
                    "type": "strings",
                    "description": "use the given ledger addresses"
                  },
                  "--no-checks": {
                    "type": "do",
                    "description": "not check for bootstrapped status or healthy status"
                  },
                  "--no-validation-checks": {
                    "type": "do",
                    "description": "not check if subnet is already synced or validated (default true)"
                  },
                  "--stake-amount": {
                    "type": "uint",
                    "description": "how many AVAX to stake in the validator"
                  },
                  "--staking-period": {
                    "type": "duration",
                    "description": "how long validator validates for after start time"
                  },
                  "--start-time": {
                    "type": "string",
                    "description": "UTC start time when this validator starts validating, in 'YYYY-MM-DD HH:MM:SS' format"
                  },
                  "--validators": {
                    "type": "strings",
                    "description": "validate subnet for the given comma separated list of validators. defaults to all cluster nodes Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "whitelist": {
            "description": "(ALPHA Warning) The whitelist command suite provides a collection of tools for granting access to the cluster. Command adds IP if --ip params provided to cloud security access rules allowing it to access all nodes in the cluster via ssh or http. It also command adds SSH public key to all nodes in the cluster if --ssh params is there. If no params provided it detects current user IP automaticaly and whitelists it Usage: avalanche node whitelist <clusterName> [--ip <IP>] [--ssh \"<sshPubKey>\"] [flags]",
            "flags": {
              "-y": {
                "alias": "--current-ip"
              },
              "--current-ip": {
                "type": "whitelist",
                "description": "current host ip"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for whitelist"
              },
              "--ip": {
                "type": "string",
                "description": "ip address to whitelist"
              },
              "--ssh": {
                "type": "string",
                "description": "ssh public key to whitelist Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "primary": {
        "description": "The primary command suite provides a collection of tools for interacting with the Primary Network Usage: avalanche primary [flags] avalanche primary [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for primary Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche primary [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "addValidator": {
            "description": "The primary addValidator command adds a node as a validator in the Primary Network Usage: avalanche primary addValidator [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--delegation-fee": {
                "type": "uint32",
                "description": "set the delegation fee (20 000 is equivalent to 2%)"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for addValidator"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--nodeID": {
                "type": "string",
                "description": "set the NodeID of the validator to add"
              },
              "--proof-of-possession": {
                "type": "string",
                "description": "set the BLS proof of possession of the validator to add"
              },
              "--public-key": {
                "type": "string",
                "description": "set the BLS public key of the validator to add"
              },
              "--staking-period": {
                "type": "duration",
                "description": "how long this validator will be staking"
              },
              "--start-time": {
                "type": "string",
                "description": "UTC start time when this validator starts validating, in 'YYYY-MM-DD HH:MM:SS' format"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--weight": {
                "type": "uint",
                "description": "set the staking weight of the validator to add Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "describe": {
            "description": "The subnet describe command prints details of the primary network configuration to the console. Usage: avalanche primary describe [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for describe"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "subnet": {
        "description": "The subnet command suite provides a collection of tools for developing and deploying Blockchains. To get started, use the subnet create command wizard to walk through the configuration of your very first Blockchain. Then, go ahead and deploy it with the subnet deploy command. You can use the rest of the commands to manage your Blockchain configurations and live deployments. Deprecation notice: use 'avalanche blockchain' Usage: avalanche subnet [flags] avalanche subnet [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for subnet Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche subnet [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "addValidator": {
            "description": "The blockchain addValidator command whitelists a primary network validator to validate the subnet of the provided deployed Blockchain. To add the validator to the Subnet's allow list, you first need to provide the blockchainName and the validator's unique NodeID. The command then prompts for the validation start time, duration, and stake weight. You can bypass these prompts by providing the values with flags. This command currently only works on Blockchains deployed to either the Fuji Testnet or Mainnet. Usage: avalanche subnet addValidator [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--default-duration": {
                "type": "set",
                "description": "duration so as to validate until primary validator ends its period"
              },
              "--default-start-time": {
                "type": "use",
                "description": "default start time for subnet validator (5 minutes later for fuji & mainnet, 30 seconds later for devnet)"
              },
              "--default-validator-params": {
                "type": "use",
                "description": "default weight/start/duration params for subnet validator"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-e": {
                "alias": "--ewoq"
              },
              "--ewoq": {
                "type": "use",
                "description": "ewoq key [fuji/devnet only]"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for addValidator"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji/devnet only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji/devnet)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--nodeID": {
                "type": "string",
                "description": "set the NodeID of the validator to add"
              },
              "--output-tx-path": {
                "type": "string",
                "description": "file path of the add validator tx"
              },
              "--staking-period": {
                "type": "duration",
                "description": "how long this validator will be staking"
              },
              "--start-time": {
                "type": "string",
                "description": "UTC start time when this validator starts validating, in 'YYYY-MM-DD HH:MM:SS' format"
              },
              "--subnet-auth-keys": {
                "type": "strings",
                "description": "control keys that will be used to authenticate add validator tx"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--wait-for-tx-acceptance": {
                "type": "just",
                "description": "issue the add validator tx, without waiting for its acceptance (default true)"
              },
              "--weight": {
                "type": "uint",
                "description": "set the staking weight of the validator to add Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "changeOwner": {
            "description": "The blockchain changeOwner changes the owner of the subnet of the deployed Blockchain. Usage: avalanche subnet changeOwner [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--control-keys": {
                "type": "strings",
                "description": "addresses that may make subnet changes"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-e": {
                "alias": "--ewoq"
              },
              "--ewoq": {
                "type": "use",
                "description": "ewoq key [fuji/devnet]"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for changeOwner"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji/devnet]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji/devnet)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--output-tx-path": {
                "type": "string",
                "description": "file path of the transfer subnet ownership tx"
              },
              "-s": {
                "alias": "--same-control-key"
              },
              "--same-control-key": {
                "type": "use",
                "description": "the fee-paying key as control key"
              },
              "--subnet-auth-keys": {
                "type": "strings",
                "description": "control keys that will be used to authenticate transfer subnet ownership tx"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--threshold": {
                "type": "uint32",
                "description": "required number of control key signatures to make subnet changes Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "configure": {
            "description": "AvalancheGo nodes support several different configuration files. Subnets have their own Subnet config which applies to all chains/VMs in the Subnet. Each chain within the Subnet can have its own chain config. A chain can also have special requirements for the AvalancheGo node configuration itself. This command allows you to set all those files. Usage: avalanche subnet configure [blockchainName] [flags]",
            "flags": {
              "--chain-config": {
                "type": "string",
                "description": "path to the chain configuration"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for configure"
              },
              "--node-config": {
                "type": "string",
                "description": "path to avalanchego node configuration"
              },
              "--per-node-chain-config": {
                "type": "string",
                "description": "path to per node chain configuration for local network"
              },
              "--subnet-config": {
                "type": "string",
                "description": "path to the subnet configuration Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "create": {
            "description": "The blockchain create command builds a new genesis file to configure your Blockchain. By default, the command runs an interactive wizard. It walks you through all the steps you need to create your first Blockchain. The tool supports deploying Subnet-EVM, and custom VMs. You can create a custom, user-generated genesis with a custom VM by providing the path to your genesis and VM binaries with the --genesis and --vm flags. By default, running the command with a blockchainName that already exists causes the command to fail. If you'd like to overwrite an existing configuration, pass the -f flag. Usage: avalanche subnet create [blockchainName] [flags]",
            "flags": {
              "--custom": {
                "type": "use",
                "description": "a custom VM template"
              },
              "--custom-vm-branch": {
                "type": "string",
                "description": "custom vm branch or commit"
              },
              "--custom-vm-build-script": {
                "type": "string",
                "description": "custom vm build-script"
              },
              "--custom-vm-path": {
                "type": "string",
                "description": "file path of custom vm to use"
              },
              "--custom-vm-repo-url": {
                "type": "string",
                "description": "custom vm repository url"
              },
              "--debug": {
                "type": "enable",
                "description": "blockchain debugging"
              },
              "--evm": {
                "type": "use",
                "description": "the Subnet-EVM as the base template"
              },
              "--evm-chain-id": {
                "type": "uint",
                "description": "chain ID to use with Subnet-EVM"
              },
              "--evm-defaults": {
                "type": "deprecation",
                "description": "notice: use '--production-defaults'"
              },
              "--evm-token": {
                "type": "string",
                "description": "token symbol to use with Subnet-EVM"
              },
              "--external-gas-token": {
                "type": "use",
                "description": "a gas token from another blockchain"
              },
              "-f": {
                "alias": "--force"
              },
              "--force": {
                "type": "overwrite",
                "description": "the existing configuration if one exists"
              },
              "--from-github-repo": {
                "type": "generate",
                "description": "custom VM binary from github repository"
              },
              "--genesis": {
                "type": "string",
                "description": "file path of genesis to use"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for create"
              },
              "--latest": {
                "type": "use",
                "description": "latest Subnet-EVM released version, takes precedence over --vm-version"
              },
              "--pre-release": {
                "type": "use",
                "description": "latest Subnet-EVM pre-released version, takes precedence over --vm-version"
              },
              "--production-defaults": {
                "type": "use",
                "description": "default production settings for your blockchain"
              },
              "--teleporter": {
                "type": "interoperate",
                "description": "with other blockchains using teleporter"
              },
              "--test-defaults": {
                "type": "use",
                "description": "default test settings for your blockchain"
              },
              "--vm": {
                "type": "string",
                "description": "file path of custom vm to use. alias to custom-vm-path"
              },
              "--vm-version": {
                "type": "string",
                "description": "version of Subnet-EVM template to use"
              },
              "--warp": {
                "type": "generate",
                "description": "a vm with warp support (needed for teleporter) (default true) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "delete": {
            "description": "The blockchain delete command deletes an existing blockchain configuration. Usage: avalanche subnet delete [blockchainName] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for delete Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "deploy": {
            "description": "The blockchain deploy command deploys your Blockchain configuration locally, to Fuji Testnet, or to Mainnet. At the end of the call, the command prints the RPC URL you can use to interact with the Subnet. Avalanche-CLI only supports deploying an individual Blockchain once per network. Subsequent attempts to deploy the same Blockchain to the same network (local, Fuji, Mainnet) aren't allowed. If you'd like to redeploy a Blockchain locally for testing, you must first call avalanche network clean to reset all deployed chain state. Subsequent local deploys redeploy the chain with fresh state. You can deploy the same Blockchain to multiple networks, so you can take your locally tested Subnet and deploy it on Fuji or Mainnet. Usage: avalanche subnet deploy [blockchainName] [flags]",
            "flags": {
              "--avalanchego-path": {
                "type": "string",
                "description": "use this avalanchego binary path"
              },
              "--avalanchego-version": {
                "type": "string",
                "description": "use this version of avalanchego (ex: v1.17.12) (default \"latest\")"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--control-keys": {
                "type": "strings",
                "description": "addresses that may make subnet changes"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-e": {
                "alias": "--ewoq"
              },
              "--ewoq": {
                "type": "use",
                "description": "ewoq key [fuji/devnet deploy only]"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for deploy"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji/devnet deploy only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji/devnet)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--mainnet-chain-id": {
                "type": "uint32",
                "description": "use different ChainID for mainnet deployment"
              },
              "--output-tx-path": {
                "type": "string",
                "description": "file path of the blockchain creation tx"
              },
              "-s": {
                "alias": "--same-control-key"
              },
              "--same-control-key": {
                "type": "use",
                "description": "the fee-paying key as control key"
              },
              "--skip-local-teleporter": {
                "type": "skip",
                "description": "automatic teleporter deploy on local networks [to be deprecated]"
              },
              "--skip-relayer": {
                "type": "skip",
                "description": "relayer deploy"
              },
              "--skip-teleporter-deploy": {
                "type": "skip",
                "description": "automatic teleporter deploy"
              },
              "--subnet-auth-keys": {
                "type": "strings",
                "description": "control keys that will be used to authenticate chain creation"
              },
              "-u": {
                "alias": "--subnet-id"
              },
              "--subnet-id": {
                "type": "string",
                "description": "do not create a subnet, deploy the blockchain into the given subnet id"
              },
              "--subnet-only": {
                "type": "only",
                "description": "create a subnet"
              },
              "--teleporter-messenger-contract-address-path": {
                "type": "string",
                "description": "path to an interchain messenger contract address file"
              },
              "--teleporter-messenger-deployer-address-path": {
                "type": "string",
                "description": "path to an interchain messenger deployer address file"
              },
              "--teleporter-messenger-deployer-tx-path": {
                "type": "string",
                "description": "path to an interchain messenger deployer tx file"
              },
              "--teleporter-registry-bytecode-path": {
                "type": "string",
                "description": "path to an interchain messenger registry bytecode file"
              },
              "--teleporter-version": {
                "type": "string",
                "description": "teleporter version to deploy (default \"latest\")"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--threshold": {
                "type": "uint32",
                "description": "required number of control key signatures to make subnet changes Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "describe": {
            "description": "The blockchain describe command prints the details of a Blockchain configuration to the console. By default, the command prints a summary of the configuration. By providing the --genesis flag, the command instead prints out the raw genesis file. Usage: avalanche subnet describe [blockchainName] [flags]",
            "flags": {
              "-g": {
                "alias": "--genesis"
              },
              "--genesis": {
                "type": "Print",
                "description": "the genesis to the console directly instead of the summary"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for describe Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "export": {
            "description": "The blockchain export command write the details of an existing Blockchain deploy to a file. The command prompts for an output path. You can also provide one with the --output flag. Usage: avalanche subnet export [blockchainName] [flags]",
            "flags": {
              "--custom-vm-branch": {
                "type": "string",
                "description": "custom vm branch"
              },
              "--custom-vm-build-script": {
                "type": "string",
                "description": "custom vm build-script"
              },
              "--custom-vm-repo-url": {
                "type": "string",
                "description": "custom vm repository url"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for export"
              },
              "-o": {
                "alias": "--output"
              },
              "--output": {
                "type": "string",
                "description": "write the export data to the provided file path Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "import": {
            "description": "Import blockchain configurations into avalanche-cli. This command suite supports importing from a file created on another computer, or importing from blockchains running public networks (e.g. created manually or with the deprecated subnet-cli) Usage: avalanche subnet import [flags] avalanche subnet import [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for import Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche subnet import [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "file": {
                "description": "The blockchain import command will import a blockchain configuration from a file or a git repository. To import from a file, you can optionally provide the path as a command-line argument. Alternatively, running the command without any arguments triggers an interactive wizard. To import from a repository, go through the wizard. By default, an imported Blockchain doesn't overwrite an existing Blockchain with the same name. To allow overwrites, provide the --force flag. Usage: avalanche subnet import file [blockchainPath] [flags]",
                "flags": {
                  "--branch": {
                    "type": "string",
                    "description": "the repo branch to use if downloading a new repo"
                  },
                  "-f": {
                    "alias": "--force"
                  },
                  "--force": {
                    "type": "overwrite",
                    "description": "the existing configuration if one exists"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for file"
                  },
                  "--repo": {
                    "type": "string",
                    "description": "the repo to import (ex: ava-labs/avalanche-plugins-core) or url to download the repo from"
                  },
                  "--subnet": {
                    "type": "string",
                    "description": "the subnet configuration to import from the provided repo Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "public": {
                "description": "The blockchain import public command imports a Blockchain configuration from a running network. By default, an imported Blockchain doesn't overwrite an existing Blockchain with the same name. To allow overwrites, provide the --force flag. Usage: avalanche subnet import public [blockchainPath] [flags]",
                "flags": {
                  "--blockchain-id": {
                    "type": "string",
                    "description": "the blockchain ID"
                  },
                  "--cluster": {
                    "type": "string",
                    "description": "operate on the given cluster"
                  },
                  "--custom": {
                    "type": "use",
                    "description": "a custom VM template"
                  },
                  "--devnet": {
                    "type": "operate",
                    "description": "on a devnet network"
                  },
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "--evm": {
                    "type": "import",
                    "description": "a subnet-evm"
                  },
                  "--force": {
                    "type": "overwrite",
                    "description": "the existing configuration if one exists"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for public"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "-m": {
                    "alias": "--mainnet"
                  },
                  "--mainnet": {
                    "type": "operate",
                    "description": "on mainnet"
                  },
                  "--node-url": {
                    "type": "string",
                    "description": "[optional] URL of an already running subnet validator"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji) Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "join": {
            "description": "The subnet join command configures your validator node to begin validating a new Blockchain. To complete this process, you must have access to the machine running your validator. If the CLI is running on the same machine as your validator, it can generate or update your node's config file automatically. Alternatively, the command can print the necessary instructions to update your node manually. To complete the validation process, the Subnet's admins must add the NodeID of your validator to the Subnet's allow list by calling addValidator with your NodeID. After you update your validator's config, you need to restart your validator manually. If you provide the --avalanchego-config flag, this command attempts to edit the config file at that path. This command currently only supports Blockchains deployed on the Fuji Testnet and Mainnet. Usage: avalanche subnet join [blockchainName] [flags]",
            "flags": {
              "--avalanchego-config": {
                "type": "string",
                "description": "file path of the avalanchego config file"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--data-dir": {
                "type": "string",
                "description": "path of avalanchego's data dir directory"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "--force-write": {
                "type": "if",
                "description": "true, skip to prompt to overwrite the config file"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for join"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--nodeID": {
                "type": "string",
                "description": "set the NodeID of the validator to check"
              },
              "--plugin-dir": {
                "type": "string",
                "description": "file path of avalanchego's plugin directory"
              },
              "--print": {
                "type": "if",
                "description": "true, print the manual config without prompting"
              },
              "--stake-amount": {
                "type": "uint",
                "description": "amount of tokens to stake on validator"
              },
              "--staking-period": {
                "type": "duration",
                "description": "how long validator validates for after start time"
              },
              "--start-time": {
                "type": "string",
                "description": "start time that validator starts validating"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "list": {
            "description": "The blockchain list command prints the names of all created Blockchain configurations. Without any flags, it prints some general, static information about the Blockchain. With the --deployed flag, the command shows additional information including the VMID, BlockchainID and SubnetID. Usage: avalanche subnet list [flags]",
            "flags": {
              "--deployed": {
                "type": "show",
                "description": "additional deploy information"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for list Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "publish": {
            "description": "The blockchain publish command publishes the Blockchain's VM to a repository. Usage: avalanche subnet publish [blockchainName] [flags]",
            "flags": {
              "--alias": {
                "type": "string",
                "description": "We publish to a remote repo, but identify the repo locally under a user-provided alias (e.g. myrepo)."
              },
              "--force": {
                "type": "If",
                "description": "true, ignores if the subnet has been published in the past, and attempts a forced publish."
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for publish"
              },
              "--no-repo-path": {
                "type": "string",
                "description": "Do not let the tool manage file publishing, but have it only generate the files and put them in the location given by this flag."
              },
              "--repo-url": {
                "type": "string",
                "description": "The URL of the repo where we are publishing"
              },
              "--subnet-file-path": {
                "type": "string",
                "description": "Path to the Subnet description file. If not given, a prompting sequence will be initiated."
              },
              "--vm-file-path": {
                "type": "string",
                "description": "Path to the VM description file. If not given, a prompting sequence will be initiated. Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "removeValidator": {
            "description": "The blockchain removeValidator command stops a whitelisted, subnet network validator from validating your deployed Blockchain. To remove the validator from the Subnet's allow list, provide the validator's unique NodeID. You can bypass these prompts by providing the values with flags. Usage: avalanche subnet removeValidator [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for removeValidator"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji deploy only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "--nodeID": {
                "type": "string",
                "description": "set the NodeID of the validator to remove"
              },
              "--output-tx-path": {
                "type": "string",
                "description": "file path of the removeValidator tx"
              },
              "--subnet-auth-keys": {
                "type": "strings",
                "description": "control keys that will be used to authenticate the removeValidator tx"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "stats": {
            "description": "The blockchain stats command prints validator statistics for the given Blockchain. Usage: avalanche subnet stats [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for stats"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "upgrade": {
            "description": "The blockchain upgrade command suite provides a collection of tools for updating your developmental and deployed Blockchains. Usage: avalanche subnet upgrade [flags] avalanche subnet upgrade [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for upgrade Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche subnet upgrade [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "apply": {
                "description": "Apply generated upgrade bytes to running Blockchain nodes to trigger a network upgrade. For public networks (Fuji Testnet or Mainnet), to complete this process, you must have access to the machine running your validator. If the CLI is running on the same machine as your validator, it can manipulate your node's configuration automatically. Alternatively, the command can print the necessary instructions to upgrade your node manually. After you update your validator's configuration, you need to restart your validator manually. If you provide the --avalanchego-chain-config-dir flag, this command attempts to write the upgrade file at that path. Refer to https://docs.avax.network/nodes/maintain/chain-config-flags#subnet-chain-configs for related documentation. Usage: avalanche subnet upgrade apply [blockchainName] [flags]",
                "flags": {
                  "--avalanchego-chain-config-dir": {
                    "type": "string",
                    "description": "avalanchego's chain config file directory (default \"/Users/schlanka/.avalanchego/chains\")"
                  },
                  "--config": {
                    "type": "create",
                    "description": "upgrade config for future subnet deployments (same as generate)"
                  },
                  "--force": {
                    "type": "If",
                    "description": "true, don't prompt for confirmation of timestamps in the past"
                  },
                  "--fuji": {
                    "type": "fuji",
                    "description": "apply upgrade existing fuji deployment (alias for `testnet`)"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for apply"
                  },
                  "--local": {
                    "type": "local",
                    "description": "apply upgrade existing local deployment"
                  },
                  "--mainnet": {
                    "type": "mainnet",
                    "description": "apply upgrade existing mainnet deployment"
                  },
                  "--print": {
                    "type": "if",
                    "description": "true, print the manual config without prompting (for public networks only)"
                  },
                  "--testnet": {
                    "type": "testnet",
                    "description": "apply upgrade existing testnet deployment (alias for `fuji`) Global Flags:"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "export": {
                "description": "Export the upgrade bytes file to a location of choice on disk Usage: avalanche subnet upgrade export [blockchainName] [flags]",
                "flags": {
                  "--force": {
                    "type": "If",
                    "description": "true, overwrite a possibly existing file without prompting"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for export"
                  },
                  "--upgrade-filepath": {
                    "type": "string",
                    "description": "Export upgrade bytes file to location of choice on disk Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "generate": {
                "description": "The blockchain upgrade generate command builds a new upgrade.json file to customize your Blockchain. It guides the user through the process using an interactive wizard. Usage: avalanche subnet upgrade generate [blockchainName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for generate Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "import": {
                "description": "Import the upgrade bytes file into the local environment Usage: avalanche subnet upgrade import [blockchainName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for import"
                  },
                  "--upgrade-filepath": {
                    "type": "string",
                    "description": "Import upgrade bytes file into local environment Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "print": {
                "description": "Print the upgrade.json file content Usage: avalanche subnet upgrade print [blockchainName] [flags]",
                "flags": {
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for print Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "vm": {
                "description": "The blockchain upgrade vm command enables the user to upgrade their Blockchain's VM binary. The command can upgrade both local Blockchains and publicly deployed Blockchains on Fuji and Mainnet. The command walks the user through an interactive wizard. The user can skip the wizard by providing command line flags. Usage: avalanche subnet upgrade vm [blockchainName] [flags]",
                "flags": {
                  "--binary": {
                    "type": "string",
                    "description": "Upgrade to custom binary"
                  },
                  "--config": {
                    "type": "upgrade",
                    "description": "config for future subnet deployments"
                  },
                  "--fuji": {
                    "type": "fuji",
                    "description": "upgrade existing fuji deployment (alias for `testnet`)"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for vm"
                  },
                  "--latest": {
                    "type": "upgrade",
                    "description": "to latest version"
                  },
                  "--local": {
                    "type": "local",
                    "description": "upgrade existing local deployment"
                  },
                  "--mainnet": {
                    "type": "mainnet",
                    "description": "upgrade existing mainnet deployment"
                  },
                  "--plugin-dir": {
                    "type": "string",
                    "description": "plugin directory to automatically upgrade VM"
                  },
                  "--print": {
                    "type": "print",
                    "description": "instructions for upgrading"
                  },
                  "--testnet": {
                    "type": "testnet",
                    "description": "upgrade existing testnet deployment (alias for `fuji`)"
                  },
                  "--version": {
                    "type": "string",
                    "description": "Upgrade to custom version Global Flags:"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "validators": {
            "description": "The blockchain validators command lists the validators of a blockchain's subnet and provides several statistics about them. Usage: avalanche subnet validators [blockchainName] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for validators"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "-m": {
                "alias": "--mainnet"
              },
              "--mainnet": {
                "type": "operate",
                "description": "on mainnet"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "vmid": {
            "description": "The blockchain vmid command prints the virtual machine ID (VMID) for the given Blockchain. Usage: avalanche subnet vmid [vmName] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for vmid Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "teleporter": {
        "description": "The teleporter command suite provides a collection of tools for interacting with Teleporter-Enabled Subnets. Usage: avalanche teleporter [flags] avalanche teleporter [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for teleporter Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche teleporter [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "bridge": {
            "description": "The bridge command suite provides tools to deploy and manage Teleporter Bridges. Deprecation notice: use avalanche interchain tokenTransferrer' instead Usage: avalanche teleporter bridge [flags] avalanche teleporter bridge [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for bridge Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche teleporter bridge [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "deploy": {
                "description": "Deploys Token Bridge into a given Network and Subnets Deprecation notice: use 'avalanche interchain tokenTransferrer deploy Usage: avalanche teleporter bridge deploy [flags]",
                "flags": {
                  "--c-chain-home": {
                    "type": "set",
                    "description": "the Transferrer's Home Chain into C-Chain"
                  },
                  "--c-chain-remote": {
                    "type": "set",
                    "description": "the Transferrer's Remote Chain into C-Chain"
                  },
                  "--cluster": {
                    "type": "string",
                    "description": "operate on the given cluster"
                  },
                  "--deploy-erc20-home": {
                    "type": "string",
                    "description": "deploy a Transferrer Home for the given Chain's ERC20 Token"
                  },
                  "--deploy-native-home": {
                    "type": "deploy",
                    "description": "a Transferrer Home for the Chain's Native Token"
                  },
                  "--deploy-native-remote": {
                    "type": "deploy",
                    "description": "a Transferrer Remote for the Chain's Native Token"
                  },
                  "--devnet": {
                    "type": "operate",
                    "description": "on a devnet network"
                  },
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for deploy"
                  },
                  "--home-blockchain": {
                    "type": "string",
                    "description": "set the Transferrer's Home Chain into the given CLI blockchain"
                  },
                  "--home-genesis-key": {
                    "type": "use",
                    "description": "genesis allocated key to deploy Transferrer Home"
                  },
                  "--home-key": {
                    "type": "string",
                    "description": "CLI stored key to use to deploy Transferrer Home"
                  },
                  "--home-private-key": {
                    "type": "string",
                    "description": "private key to use to deploy Transferrer Home"
                  },
                  "--home-rpc": {
                    "type": "string",
                    "description": "use the given RPC URL to connect to the home blockchain"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "--remote-blockchain": {
                    "type": "string",
                    "description": "set the Transferrer's Remote Chain into the given CLI blockchain"
                  },
                  "--remote-genesis-key": {
                    "type": "use",
                    "description": "genesis allocated key to deploy Transferrer Remote"
                  },
                  "--remote-key": {
                    "type": "string",
                    "description": "CLI stored key to use to deploy Transferrer Remote"
                  },
                  "--remote-private-key": {
                    "type": "string",
                    "description": "private key to use to deploy Transferrer Remote"
                  },
                  "--remote-rpc": {
                    "type": "string",
                    "description": "use the given RPC URL to connect to the remote blockchain"
                  },
                  "--remote-token-decimals": {
                    "type": "uint8",
                    "description": "use the given number of token decimals for the Transferrer Remote [defaults to token home's decimals (18 for a new wrapped native home token)]"
                  },
                  "--remove-minter-admin": {
                    "type": "remove",
                    "description": "the native minter precompile admin found on remote blockchain genesis"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji)"
                  },
                  "--use-home": {
                    "type": "string",
                    "description": "use the given Transferrer's Home Address"
                  },
                  "--version": {
                    "type": "string",
                    "description": "tag/branch/commit of Avalanche Interchain Token Transfer (ICTT) to be used (defaults to main branch) Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          },
          "deploy": {
            "description": "Deploys Teleporter into a given Network and Subnet. Usage: avalanche teleporter deploy [flags]",
            "flags": {
              "--blockchain": {
                "type": "string",
                "description": "deploy ICM into the given CLI blockchain"
              },
              "--blockchain-id": {
                "type": "string",
                "description": "deploy ICM into the given blockchain ID/Alias"
              },
              "--c-chain": {
                "type": "deploy",
                "description": "ICM into C-Chain"
              },
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--deploy-messenger": {
                "type": "deploy",
                "description": "Teleporter Messenger (default true)"
              },
              "--deploy-registry": {
                "type": "deploy",
                "description": "Teleporter Registry (default true)"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "--genesis-key": {
                "type": "use",
                "description": "genesis allocated key to fund ICM deploy"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for deploy"
              },
              "--key": {
                "type": "string",
                "description": "CLI stored key to use to fund ICM deploy"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "--messenger-contract-address-path": {
                "type": "string",
                "description": "path to a messenger contract address file"
              },
              "--messenger-deployer-address-path": {
                "type": "string",
                "description": "path to a messenger deployer address file"
              },
              "--messenger-deployer-tx-path": {
                "type": "string",
                "description": "path to a messenger deployer tx file"
              },
              "--private-key": {
                "type": "string",
                "description": "private key to use to fund ICM deploy"
              },
              "--registry-bytecode-path": {
                "type": "string",
                "description": "path to a registry bytecode file"
              },
              "--rpc-url": {
                "type": "string",
                "description": "use the given RPC URL to connect to the subnet"
              },
              "--subnet": {
                "type": "string",
                "description": "deploy ICM into the given CLI blockchain"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji)"
              },
              "--version": {
                "type": "string",
                "description": "version to deploy (default \"latest\") Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "msg": {
            "description": "Sends and wait reception for a teleporter msg between two subnets (Currently only for local network). Usage: avalanche teleporter msg [sourceBlockchainName] [destinationBlockchainName] [messageContent] [flags]",
            "flags": {
              "--cluster": {
                "type": "string",
                "description": "operate on the given cluster"
              },
              "--dest-rpc": {
                "type": "string",
                "description": "use the given destination blockchain rpc endpoint"
              },
              "--destination-address": {
                "type": "string",
                "description": "deliver the message to the given contract destination address"
              },
              "--devnet": {
                "type": "operate",
                "description": "on a devnet network"
              },
              "--endpoint": {
                "type": "string",
                "description": "use the given endpoint for network operations"
              },
              "-f": {
                "alias": "--fuji"
              },
              "--fuji": {
                "type": "testnet",
                "description": "operate on fuji (alias to testnet"
              },
              "--genesis-key": {
                "type": "use",
                "description": "genesis allocated key as message originator and to pay source blockchain fees"
              },
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for msg"
              },
              "--hex-encoded": {
                "type": "given",
                "description": "message is hex encoded"
              },
              "--key": {
                "type": "string",
                "description": "CLI stored key to use as message originator and to pay source blockchain fees"
              },
              "-l": {
                "alias": "--local"
              },
              "--local": {
                "type": "operate",
                "description": "on a local network"
              },
              "--private-key": {
                "type": "string",
                "description": "private key to use as message originator and to pay source blockchain fees"
              },
              "--source-rpc": {
                "type": "string",
                "description": "use the given source blockchain rpc endpoint"
              },
              "-t": {
                "alias": "--testnet"
              },
              "--testnet": {
                "type": "fuji",
                "description": "operate on testnet (alias to fuji) Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "relayer": {
            "description": "The relayer command suite provides a collection of tools for deploying and configuring an ICM relayers. Usage: avalanche teleporter relayer [flags] avalanche teleporter relayer [command]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for relayer Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions Use \"avalanche teleporter relayer [command] --help\" for more information about a command."
              }
            },
            "subcommands": {
              "deploy": {
                "description": "Deploys an ICM Relayer for the given Network. Usage: avalanche teleporter relayer deploy [flags]",
                "flags": {
                  "--cluster": {
                    "type": "string",
                    "description": "operate on the given cluster"
                  },
                  "--devnet": {
                    "type": "operate",
                    "description": "on a devnet network"
                  },
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for deploy"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji)"
                  },
                  "--version": {
                    "type": "string",
                    "description": "version to deploy (default \"latest\") Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "logs": {
                "description": "Shows pretty formatted AWM relayer logs Usage: avalanche teleporter relayer logs [flags]",
                "flags": {
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "--first": {
                    "type": "uint",
                    "description": "output first N log lines"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for logs"
                  },
                  "--last": {
                    "type": "uint",
                    "description": "output last N log lines"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "--raw": {
                    "type": "raw",
                    "description": "logs output"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji) Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "start": {
                "description": "Starts AWM relayer on the specified network (Currently only for local network). Usage: avalanche teleporter relayer start [flags]",
                "flags": {
                  "--cluster": {
                    "type": "string",
                    "description": "operate on the given cluster"
                  },
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for start"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji) Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              },
              "stop": {
                "description": "Stops AWM relayer on the specified network (Currently only for local network, cluster). Usage: avalanche teleporter relayer stop [flags]",
                "flags": {
                  "--cluster": {
                    "type": "string",
                    "description": "operate on the given cluster"
                  },
                  "--endpoint": {
                    "type": "string",
                    "description": "use the given endpoint for network operations"
                  },
                  "-f": {
                    "alias": "--fuji"
                  },
                  "--fuji": {
                    "type": "testnet",
                    "description": "operate on fuji (alias to testnet"
                  },
                  "-h": {
                    "alias": "--help"
                  },
                  "--help": {
                    "type": "help",
                    "description": "for stop"
                  },
                  "-l": {
                    "alias": "--local"
                  },
                  "--local": {
                    "type": "operate",
                    "description": "on a local network"
                  },
                  "-t": {
                    "alias": "--testnet"
                  },
                  "--testnet": {
                    "type": "fuji",
                    "description": "operate on testnet (alias to fuji) Global Flags:"
                  },
                  "--config": {
                    "type": "string",
                    "description": "config file (default is $HOME/.avalanche-cli/config.json)"
                  },
                  "--log-level": {
                    "type": "string",
                    "description": "log level for the application (default \"ERROR\")"
                  },
                  "--skip-update-check": {
                    "type": "skip",
                    "description": "check for new versions"
                  }
                },
                "subcommands": {}
              }
            }
          }
        }
      },
      "transaction": {
        "description": "The transaction command suite provides all of the utilities required to sign multisig transactions. Usage: avalanche transaction [flags] avalanche transaction [command]",
        "flags": {
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for transaction Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions Use \"avalanche transaction [command] --help\" for more information about a command."
          }
        },
        "subcommands": {
          "commit": {
            "description": "The transaction commit command commits a transaction by submitting it to the P-Chain. Usage: avalanche transaction commit [subnetName] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for commit"
              },
              "--input-tx-filepath": {
                "type": "string",
                "description": "Path to the transaction signed by all signatories Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          },
          "sign": {
            "description": "The transaction sign command signs a multisig transaction. Usage: avalanche transaction sign [subnetName] [flags]",
            "flags": {
              "-h": {
                "alias": "--help"
              },
              "--help": {
                "type": "help",
                "description": "for sign"
              },
              "--input-tx-filepath": {
                "type": "string",
                "description": "Path to the transaction file for signing"
              },
              "-k": {
                "alias": "--key"
              },
              "--key": {
                "type": "string",
                "description": "select the key to use [fuji only]"
              },
              "-g": {
                "alias": "--ledger"
              },
              "--ledger": {
                "type": "use",
                "description": "ledger instead of key (always true on mainnet, defaults to false on fuji)"
              },
              "--ledger-addrs": {
                "type": "strings",
                "description": "use the given ledger addresses Global Flags:"
              },
              "--config": {
                "type": "string",
                "description": "config file (default is $HOME/.avalanche-cli/config.json)"
              },
              "--log-level": {
                "type": "string",
                "description": "log level for the application (default \"ERROR\")"
              },
              "--skip-update-check": {
                "type": "skip",
                "description": "check for new versions"
              }
            },
            "subcommands": {}
          }
        }
      },
      "update": {
        "description": "Check if an update is available, and prompt the user to install it Usage: avalanche update [flags]",
        "flags": {
          "-c": {
            "alias": "--confirm"
          },
          "--confirm": {
            "type": "Assume",
            "description": "yes for installation"
          },
          "-h": {
            "alias": "--help"
          },
          "--help": {
            "type": "help",
            "description": "for update"
          },
          "-v": {
            "alias": "--version"
          },
          "--version": {
            "type": "version",
            "description": "for update Global Flags:"
          },
          "--config": {
            "type": "string",
            "description": "config file (default is $HOME/.avalanche-cli/config.json)"
          },
          "--log-level": {
            "type": "string",
            "description": "log level for the application (default \"ERROR\")"
          },
          "--skip-update-check": {
            "type": "skip",
            "description": "check for new versions"
          }
        },
        "subcommands": {}
      }
    }
  }
}